<?php

/**
 * @file
 * Howard Content Types module file.
 */

 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\media\Entity\Media;
 use Drupal\image\Entity\ImageStyle;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\taxonomy\Entity\Term;
 use Drupal\Core\Form\FormStateInterface;

  /**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function howard_content_types_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.howard_content_types':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
 }

 /**
  * Implements hook_preprocess_node().
  * @param $variables
  */
 function howard_content_types_preprocess_node(&$variables) {

    $node = $variables['elements']['#node'];
    $view_mode = $variables['view_mode'];
    $bundle = $node->bundle();

    // Hero Images
    $variables['hero_image'] = '/themes/contrib/hu_general/idfive-component-library/build/img/graduates_talking.jpg';
    if ($node->hasField('field_hc_header_image')) {
      $hero_image = $node->get('field_hc_header_image')->getValue();
      if ($hero_image && !empty($hero_image)) {
        $entity = Media::load($hero_image[0]['target_id']);
        if($entity->field_media_image->entity !== null && $entity->field_media_image->entity->getFileUri() !== null) {
          $variables['hero_image'] = ImageStyle::load('hc_hero_image')->buildUrl($entity->field_media_image->entity->getFileUri());
        }
      }
    }
    $variables['show_hero_image'] = true;
    if ($node->hasField('field_hc_hide_header_image')) {
      $value = $node->get('field_hc_hide_header_image')->getValue();
      if($value[0]['value'] == '1') {
        $variables['show_hero_image'] = false;
      }
    }

    // Homepage Intro Background Image
    if($bundle == 'hc_standard_homepage') {
      $variables['home_intro_image'] = '/themes/contrib/hu_general/idfive-component-library/build/img/graduates_talking.jpg';
      if ($node->hasField('field_hc_intro_background_image')) {
        $bckrd_image = $node->get('field_hc_intro_background_image')->getValue();
        if ($bckrd_image && !empty($bckrd_image)) {
          $entity = Media::load($bckrd_image[0]['target_id']);
          if(isset($entity->field_media_image->entity)) {
            $variables['home_intro_image'] = ImageStyle::load('hc_hero_image')->buildUrl($entity->field_media_image->entity->getFileUri());
          }
        }
      }
    }
    
 }

 /**
 * Implements hook_preprocess_views_view().
 */
function howard_content_types_preprocess_views_view(&$variables) {
  if ($variables['view']->id() === 'hc_media_browser') {
    $variables['view_array']['#attached']['library'][] = 'howard_content_types/view';
  }
}

/**
 * Implements hook_install().
 * Creates stock media browser terms.
 */
function howard_content_types_install() {
  _howard_content_types_create_media_browser_terms();
}

/**
  * Implements hook_node_form_alter().
  */
function howard_content_types_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#attached']['library'][] = 'howard_content_types/admin';
  if($form_id == 'node_hc_standard_homepage_edit_form') {
    $form['field_hc_header_video']['widget']['#description'] = '<p>This feature is not yet operational. Any video added here will not yet work. Please contact web services with any questions.</p>';
  }
}


// CUSTOM
//////////////////////////////////////////////////////


/**
 * Updates to media browser, taxonomies, etc.
 */
function _howard_content_types_create_media_browser_terms() {
  $categories = [
    'Students', 
    'Alumni', 
    'Faculty & Staff', 
    'Events', 
    'Campus Landmarks', 
    'University Figures',
    'Campus Life', 
    'Homecoming', 
    'Commencement',
    'Opening Convocation', 
    'Charter Day', 
    'Undergraduate',
    'Graduate/Professional', 
    'Community Service', 
    'Local & Regional'
  ]; 
  foreach ($categories as $category) {
    $term = Term::create(array(
      'parent' => array(),
      'name' => $category,
      'vid' => 'hc_media_category',
    ))->save();
  }
}


// UPDATES
//////////////////////////////////////////////////////


/**
 * Updates to media browser, taxonomies, etc.
 */
function howard_content_types_update_8001() {
  \Drupal::service('config.installer')->installDefaultConfig('module', 'howard_content_types');
  _howard_content_types_create_media_browser_terms();
}

/**
 * Updates to media, need files copied to all sites files folders.
 */
function howard_content_types_update_8002() {
  $source = drupal_get_path('module', 'media') . '/images/icons';
  $destination = \Drupal::config('media.settings')->get('icon_base_uri');
  file_prepare_directory($destination, FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS);
  $files = file_scan_directory($source, '/.*\.(svg|png|jpg|jpeg|gif)$/');
  foreach ($files as $file) {
    if (!file_exists($destination . DIRECTORY_SEPARATOR . $file->filename)) {
      file_unmanaged_copy($file->uri, $destination, FILE_EXISTS_ERROR);
   }
  }
}