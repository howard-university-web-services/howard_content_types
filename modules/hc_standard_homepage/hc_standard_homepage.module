<?php

/**
 * @file
 * Hc_standard_homepage module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\media\Entity\Media;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function hc_standard_homepage_embed_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.hc_standard_homepage':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_preprocess_node().
 */
function hc_standard_homepage_preprocess_node(&$variables) {

  $node = $variables['elements']['#node'];
  $bundle = $node->bundle();
  if ($bundle == 'hc_standard_homepage') {
    $variables['hero_display_type'] = 'standard_intro';
    if ($node->hasField('field_hc_hero_display_options')) {
      $value = $node->get('field_hc_hero_display_options')->getValue();
      $value = $value[0]['value'];
      $variables['hero_display_type'] = $value;
    }

    $variables['hero_media_display_type'] = 'image';
    if ($node->hasField('field_hc_media_display_options')) {
      $value = $node->get('field_hc_media_display_options')->getValue();
      $value = $value[0]['value'];
      $variables['hero_media_display_type'] = $value;
    }

    $variables['show_intro_sidebar'] = TRUE;
    if ($node->hasField('field_hc_hide_intro_sidebar')) {
      $value = $node->get('field_hc_hide_intro_sidebar')->getValue();
      if ($value[0]['value'] == '1') {
        $variables['show_intro_sidebar'] = FALSE;
      }
    }

    $variables['hero_media_video'] = _hc_standard_homepage_load_vimeo_video_background($node, 'field_hc_header_video');

  }
}

/**
 * Gets vimeo video and modifies for background use.
 */
function _hc_standard_homepage_load_vimeo_video_background($node, $field) {
  if ($node->hasField($field)) {
    $video = $node->get($field)->getValue();
    if ($video && !empty($video)) {
      $entity = Media::load($video[0]['target_id']);
      if ($entity->hasField('field_media_oembed_video')) {
        // If remote video.
        $video_url = $entity->field_media_oembed_video->value;
        // If vimeo.
        if (strpos($video_url, 'vimeo') !== FALSE) {
          $video_url = preg_replace('/[^0-9]/', '', $video_url);
          return $video_url;
        }
      }
    }
  }
}
