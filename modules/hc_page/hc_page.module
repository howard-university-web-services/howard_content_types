<?php

/**
 * @file
 * Hc_page module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function hc_page_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.hc_page':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_preprocess_node().
 */
function hc_page_preprocess_node(&$variables) {
  $node = $variables['elements']['#node'];
  $view_mode = $variables['view_mode'];
  $bundle = $node->bundle();
  if ($view_mode == 'full' && $bundle == 'hc_page') {

    // Check whether to show/hide sidebar.
    $variables['show_sidebar'] = TRUE;
    if ($node->hasField('field_hc_hide_sidebar')) {
      $value = $node->get('field_hc_hide_sidebar')->getValue();
      if (isset($value[0]) && $value[0]['value'] == '1') {
        $variables['show_sidebar'] = FALSE;
      }
    }

    // Check whether to require SAML auth to view the page or not.
    if (\Drupal::currentUser()->isAnonymous()) {
      if ($node->hasField('field_hc_hide_for_nonhoward')) {
        $value = $node->get('field_hc_hide_for_nonhoward')->getValue();
        if (isset($value[0]) && $value[0]['value'] == '1') {
          \Drupal::service('howard.auth')->limitToHowardUsers();
        }
      }
    }

  }
}
